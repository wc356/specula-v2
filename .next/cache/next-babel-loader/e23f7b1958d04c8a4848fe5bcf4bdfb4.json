{"ast":null,"code":"var _jsxFileName = \"/Users/WooChoi/Desktop/React.js/specula/src/components/PhoneForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport PhonesContext from \"../context/phones-context\";\n\nconst PhoneForm = () => {\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: release,\n    1: setRelease\n  } = useState(\"\");\n  const {\n    0: price,\n    1: setPrice\n  } = useState(0);\n  const {\n    0: brand,\n    1: setBrand\n  } = useState(\"\");\n  const {\n    0: display,\n    1: setDisplay\n  } = useState(\"\");\n  const {\n    0: screen,\n    1: setScreen\n  } = useState(0);\n  const {\n    0: dimensions,\n    1: setDimensions\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    phonesDispatch\n  } = useContext(PhonesContext); // Set up state to track the event, and set state's value as e.target.value\n  // set up effect to fire on componentDidUpdate()\n  // specify which input fields for hook to update -> setting the initial state as a variable\n  // Custom Hooks?\n\n  const onNameChange = e => setName(e.target.value);\n\n  const onReleaseChange = e => setRelease(e.target.value);\n\n  const onBrandChange = e => setBrand(e.target.value);\n\n  const onDisplayChange = e => setDisplay(e.target.value);\n\n  const onScreenChange = e => setScreen(e.target.value);\n\n  const onDimensionsChange = e => setDimensions(e.target.value);\n\n  const onPriceChange = e => {\n    // Regex to constrain currency input to two decimal places\n    const val = e.target.val;\n\n    if (!val || val.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      setPrice(val);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!name || !brand) {\n      setError(\"Please provide Name and Brand\");\n    } else {\n      setError(\"\");\n      phonesDispatch({});\n      props.onSubmit({\n        name,\n        release,\n        price,\n        brand,\n        display,\n        screen,\n        dimensions\n      });\n    }\n  };\n\n  const inputChange = useInputChange();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, error && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, error), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: inputChange,\n    onChange: inputChange,\n    placeholder: \"name\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: release,\n    onChange: onReleaseChange,\n    placeholder: \"release\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: price,\n    onChange: onPriceChange,\n    placeholder: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: brand,\n    onChange: onBrandChange,\n    placeholder: \"brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: display,\n    onChange: onDisplayChange,\n    placeholder: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: screen,\n    onChange: onScreenChange,\n    placeholder: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: dimensions,\n    onChange: onDimensionsChange,\n    placeholder: \"dimensions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Add Expense\")));\n};\n\nexport default PhoneForm;","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/src/components/PhoneForm.js"],"names":["React","useState","useContext","useEffect","PhonesContext","PhoneForm","name","setName","release","setRelease","price","setPrice","brand","setBrand","display","setDisplay","screen","setScreen","dimensions","setDimensions","error","setError","phonesDispatch","onNameChange","e","target","value","onReleaseChange","onBrandChange","onDisplayChange","onScreenChange","onDimensionsChange","onPriceChange","val","match","onSubmit","preventDefault","props","inputChange","useInputChange"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport PhonesContext from \"../context/phones-context\";\n\nconst PhoneForm = () => {\n  const [name, setName] = useState(\"\");\n  const [release, setRelease] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState(\"\");\n  const [display, setDisplay] = useState(\"\");\n  const [screen, setScreen] = useState(0);\n  const [dimensions, setDimensions] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const { phonesDispatch } = useContext(PhonesContext);\n\n  // Set up state to track the event, and set state's value as e.target.value\n  // set up effect to fire on componentDidUpdate()\n  // specify which input fields for hook to update -> setting the initial state as a variable\n\n  // Custom Hooks?\n  const onNameChange = e => setName(e.target.value);\n  const onReleaseChange = e => setRelease(e.target.value);\n  const onBrandChange = e => setBrand(e.target.value);\n  const onDisplayChange = e => setDisplay(e.target.value);\n  const onScreenChange = e => setScreen(e.target.value);\n  const onDimensionsChange = e => setDimensions(e.target.value);\n  const onPriceChange = e => {\n    // Regex to constrain currency input to two decimal places\n    const val = e.target.val;\n    if (!val || val.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      setPrice(val);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!name || !brand) {\n      setError(\"Please provide Name and Brand\");\n    } else {\n      setError(\"\");\n      phonesDispatch({});\n\n      props.onSubmit({\n        name,\n        release,\n        price,\n        brand,\n        display,\n        screen,\n        dimensions\n      });\n    }\n  };\n\n  const inputChange = useInputChange();\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={inputChange}\n          onChange={inputChange}\n          placeholder=\"name\"\n          autoFocus\n        />\n        <input\n          type=\"text\"\n          value={release}\n          onChange={onReleaseChange}\n          placeholder=\"release\"\n        />\n        <input\n          type=\"text\"\n          value={price}\n          onChange={onPriceChange}\n          placeholder=\"price\"\n        />\n        <input\n          type=\"text\"\n          value={brand}\n          onChange={onBrandChange}\n          placeholder=\"brand\"\n        />\n        <input\n          type=\"text\"\n          value={display}\n          onChange={onDisplayChange}\n          placeholder=\"display\"\n        />\n        <input\n          type=\"text\"\n          value={screen}\n          onChange={onScreenChange}\n          placeholder=\"screen\"\n        />\n        <input\n          type=\"text\"\n          value={dimensions}\n          onChange={onDimensionsChange}\n          placeholder=\"dimensions\"\n        />\n        <button>Add Expense</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PhoneForm;\n"]},"metadata":{},"sourceType":"module"}