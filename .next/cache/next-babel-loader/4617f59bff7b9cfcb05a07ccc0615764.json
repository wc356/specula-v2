{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Phones Reducer\nconst phonesReducerDefaultState = [];\n\nconst phonesReducer = (state = phonesReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"ADD_PHONE\":\n      return [...state, action.phone];\n\n    case \"REMOVE_PHONE\":\n      return state.filter(({\n        id\n      }) => id !== action.id);\n\n    case \"EDIT_PHONE\":\n      return state.map(phone => {\n        if (phone.id === action.id) {\n          return _objectSpread({}, phone, {}, action.updates);\n        } else {\n          return phone;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default phonesReducer;","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/src/reducers/phones.js"],"names":["phonesReducerDefaultState","phonesReducer","state","action","type","phone","filter","id","map","updates"],"mappings":";;;;;;AAAA;AACA,MAAMA,yBAAyB,GAAG,EAAlC;;AACA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGF,yBAAT,EAAoCG,MAApC,KAA+C;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,KAAlB,CAAP;;AACF,SAAK,cAAL;AACE,aAAOH,KAAK,CAACI,MAAN,CAAa,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKJ,MAAM,CAACI,EAAvC,CAAP;;AACF,SAAK,YAAL;AACE,aAAOL,KAAK,CAACM,GAAN,CAAUH,KAAK,IAAI;AACxB,YAAIA,KAAK,CAACE,EAAN,KAAaJ,MAAM,CAACI,EAAxB,EAA4B;AAC1B,mCACKF,KADL,MAEKF,MAAM,CAACM,OAFZ;AAID,SALD,MAKO;AACL,iBAAOJ,KAAP;AACD;AACF,OATM,CAAP;;AAUF;AACE,aAAOH,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["// Phones Reducer\nconst phonesReducerDefaultState = [];\nconst phonesReducer = (state = phonesReducerDefaultState, action) => {\n  switch (action.type) {\n    case \"ADD_PHONE\":\n      return [...state, action.phone];\n    case \"REMOVE_PHONE\":\n      return state.filter(({ id }) => id !== action.id);\n    case \"EDIT_PHONE\":\n      return state.map(phone => {\n        if (phone.id === action.id) {\n          return {\n            ...phone,\n            ...action.updates\n          };\n        } else {\n          return phone;\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nexport default phonesReducer;\n"]},"metadata":{},"sourceType":"module"}