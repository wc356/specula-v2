{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/WooChoi/Desktop/React.js/specula/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useReducer } from \"react\";\nimport PhonesContext from \"../src/context/phones-context\";\nimport phoneDB from \"../src/database/index\";\nimport filtersReducer from \"../src/reducers/filters\";\nimport phonesReducer from \"../src/reducers/phones\";\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useReducer = useReducer(phonesReducer, phoneDB),\n      phones = _useReducer[0],\n      phonesDispatch = _useReducer[1];\n\n  var _useReducer2 = useReducer(filtersReducer, {\n    text: \"\",\n    sortBy: \"release\"\n  }),\n      filters = _useReducer2[0],\n      filtersDispatch = _useReducer2[1];\n\n  useEffect(function () {\n    console.log(\"Successfully Mounted\"); // Load data from localStorage\n\n    var phones = JSON.parse(localStorage.getItem(\"phones\"));\n\n    if (phones) {\n      phonesDispatch({\n        type: \"POPULATE_PHONES\",\n        phones: phones\n      });\n    }\n  }, []); // Save item 'phones' to localStorage\n\n  useEffect(function () {\n    localStorage.setItem(\"phones\", JSON.stringify(phones));\n  }, [phones]);\n  return __jsx(PhonesContext.Provider, {\n    value: {\n      phones: phones,\n      phonesDispatch: phonesDispatch,\n      filters: filters,\n      filtersDispatch: filtersDispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/pages/_app.js"],"names":["React","useEffect","useReducer","PhonesContext","phoneDB","filtersReducer","phonesReducer","App","Component","pageProps","phones","phonesDispatch","text","sortBy","filters","filtersDispatch","console","log","JSON","parse","localStorage","getItem","type","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,oBACPP,UAAU,CAACI,aAAD,EAAgBF,OAAhB,CADH;AAAA,MACjCM,MADiC;AAAA,MACzBC,cADyB;;AAAA,qBAELT,UAAU,CAACG,cAAD,EAAiB;AAC5DO,IAAAA,IAAI,EAAE,EADsD;AAE5DC,IAAAA,MAAM,EAAE;AAFoD,GAAjB,CAFL;AAAA,MAEjCC,OAFiC;AAAA,MAExBC,eAFwB;;AAOxCd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADc,CAEd;;AACA,QAAMP,MAAM,GAAGQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAf;;AACA,QAAIX,MAAJ,EAAY;AACVC,MAAAA,cAAc,CAAC;AAAEW,QAAAA,IAAI,EAAE,iBAAR;AAA2BZ,QAAAA,MAAM,EAANA;AAA3B,OAAD,CAAd;AACD;AACF,GAPQ,EAON,EAPM,CAAT,CAPwC,CAgBxC;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA+BL,IAAI,CAACM,SAAL,CAAed,MAAf,CAA/B;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,SACE,MAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,cAAc,EAAdA,cAAV;AAA0BG,MAAAA,OAAO,EAAPA,OAA1B;AAAmCC,MAAAA,eAAe,EAAfA;AAAnC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,SAAD,eAAeN,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,CADF;AAOD,CA5BD;;AA8BA,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport PhonesContext from \"../src/context/phones-context\";\n\nimport phoneDB from \"../src/database/index\";\nimport filtersReducer from \"../src/reducers/filters\";\nimport phonesReducer from \"../src/reducers/phones\";\n\nconst App = ({ Component, pageProps }) => {\n  const [phones, phonesDispatch] = useReducer(phonesReducer, phoneDB);\n  const [filters, filtersDispatch] = useReducer(filtersReducer, {\n    text: \"\",\n    sortBy: \"release\"\n  });\n\n  useEffect(() => {\n    console.log(\"Successfully Mounted\");\n    // Load data from localStorage\n    const phones = JSON.parse(localStorage.getItem(\"phones\"));\n    if (phones) {\n      phonesDispatch({ type: \"POPULATE_PHONES\", phones });\n    }\n  }, []);\n\n  // Save item 'phones' to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"phones\", JSON.stringify(phones));\n  }, [phones]);\n\n  return (\n    <PhonesContext.Provider\n      value={{ phones, phonesDispatch, filters, filtersDispatch }}\n    >\n      <Component {...pageProps} />\n    </PhonesContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}