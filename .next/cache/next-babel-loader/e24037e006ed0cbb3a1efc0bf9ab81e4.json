{"ast":null,"code":"var _jsxFileName = \"/Users/WooChoi/Desktop/React.js/specula/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from \"next/app\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport { addPhone } from \"../src/actions/phones\";\nimport configureStore from \"../src/store/configureStore\";\nimport PhoneDashboardPage from \"../src/components/PhoneDashboardPage\";\n\nconst makeStore = () => {\n  return configureStore();\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    ctx.store.dispatch(addPhone({\n      name: \"iPhone 8\",\n      release: \"Sept 2018\",\n      price: 900\n    }));\n    ctx.store.dispatch(addPhone({\n      name: \"iPhone 11\",\n      release: \"Jan 2018\",\n      price: 900\n    }));\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRedux(makeStore, {\n  debug: true\n})(MyApp);","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/pages/_app.js"],"names":["App","React","Provider","withRedux","addPhone","configureStore","PhoneDashboardPage","makeStore","MyApp","getInitialProps","Component","ctx","store","dispatch","name","release","price","pageProps","render","props","debug"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAOF,cAAc,EAArB;AACD,CAFD;;AAIA,MAAMG,KAAN,SAAoBR,GAApB,CAAwB;AACtB,eAAaS,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/CA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CACET,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAE,WAA7B;AAA0CC,MAAAA,KAAK,EAAE;AAAjD,KAAD,CADV;AAGAL,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CACET,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE,UAA9B;AAA0CC,MAAAA,KAAK,EAAE;AAAjD,KAAD,CADV;AAGA,UAAMC,SAAS,GAAGP,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIA,WAAO;AAAEM,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,SAAF;AAAaO,MAAAA,SAAb;AAAwBL,MAAAA;AAAxB,QAAkC,KAAKO,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAtBqB;;AAyBxB,eAAed,SAAS,CAACI,SAAD,EAAY;AAAEa,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAAT,CAAsCZ,KAAtC,CAAf","sourcesContent":["import App from \"next/app\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport { addPhone } from \"../src/actions/phones\";\nimport configureStore from \"../src/store/configureStore\";\nimport PhoneDashboardPage from \"../src/components/PhoneDashboardPage\";\n\nconst makeStore = () => {\n  return configureStore();\n};\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    ctx.store.dispatch(\n      addPhone({ name: \"iPhone 8\", release: \"Sept 2018\", price: 900 })\n    );\n    ctx.store.dispatch(\n      addPhone({ name: \"iPhone 11\", release: \"Jan 2018\", price: 900 })\n    );\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore, { debug: true })(MyApp);\n"]},"metadata":{},"sourceType":"module"}