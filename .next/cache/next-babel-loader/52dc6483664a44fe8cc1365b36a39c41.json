{"ast":null,"code":"var _jsxFileName = \"/Users/WooChoi/Desktop/React.js/specula/src/components/PhoneForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport PhonesContext from \"../context/phones-context\";\nimport useInputChange from \"../hooks/useInputChange\";\n\nvar PhoneForm = function PhoneForm() {\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      release = _useState2[0],\n      setRelease = _useState2[1];\n\n  var _useState3 = useState(0),\n      price = _useState3[0],\n      setPrice = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      brand = _useState4[0],\n      setBrand = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      display = _useState5[0],\n      setDisplay = _useState5[1];\n\n  var _useState6 = useState(0),\n      screen = _useState6[0],\n      setScreen = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      dimensions = _useState7[0],\n      setDimensions = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useContext = useContext(PhonesContext),\n      phonesDispatch = _useContext.phonesDispatch; // Set up state to track the event, and set state's value as e.target.value\n  // set up effect to fire on componentDidUpdate()\n  // specify which input fields for hook to update -> setting the initial state as a variable\n  // Custom Hooks?\n\n\n  var onNameChange = function onNameChange(e) {\n    return setName(e.target.value);\n  };\n\n  var onReleaseChange = function onReleaseChange(e) {\n    return setRelease(e.target.value);\n  };\n\n  var onBrandChange = function onBrandChange(e) {\n    return setBrand(e.target.value);\n  };\n\n  var onDisplayChange = function onDisplayChange(e) {\n    return setDisplay(e.target.value);\n  };\n\n  var onScreenChange = function onScreenChange(e) {\n    return setScreen(e.target.value);\n  };\n\n  var onDimensionsChange = function onDimensionsChange(e) {\n    return setDimensions(e.target.value);\n  };\n\n  var onPriceChange = function onPriceChange(e) {\n    // Regex to constrain currency input to two decimal places\n    var val = e.target.val;\n\n    if (!val || val.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      setPrice(val);\n    }\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n\n    if (!name || !brand) {\n      setError(\"Please provide Name and Brand\");\n    } else {\n      setError(\"\");\n      phonesDispatch({});\n      props.onSubmit({\n        name: name,\n        release: release,\n        price: price,\n        brand: brand,\n        display: display,\n        screen: screen,\n        dimensions: dimensions\n      });\n    }\n  };\n\n  var inputChange = useInputChange();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, error && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, error), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: inputChange,\n    onChange: inputChange,\n    placeholder: \"name\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: release,\n    onChange: onReleaseChange,\n    placeholder: \"release\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: price,\n    onChange: onPriceChange,\n    placeholder: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: brand,\n    onChange: onBrandChange,\n    placeholder: \"brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: display,\n    onChange: onDisplayChange,\n    placeholder: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: screen,\n    onChange: onScreenChange,\n    placeholder: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: dimensions,\n    onChange: onDimensionsChange,\n    placeholder: \"dimensions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Add Expense\")));\n};\n\nexport default PhoneForm;","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/src/components/PhoneForm.js"],"names":["React","useState","useContext","useEffect","PhonesContext","useInputChange","PhoneForm","name","setName","release","setRelease","price","setPrice","brand","setBrand","display","setDisplay","screen","setScreen","dimensions","setDimensions","error","setError","phonesDispatch","onNameChange","e","target","value","onReleaseChange","onBrandChange","onDisplayChange","onScreenChange","onDimensionsChange","onPriceChange","val","match","onSubmit","preventDefault","props","inputChange"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport PhonesContext from \"../context/phones-context\";\nimport useInputChange from \"../hooks/useInputChange\";\n\nconst PhoneForm = () => {\n  const [name, setName] = useState(\"\");\n  const [release, setRelease] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [brand, setBrand] = useState(\"\");\n  const [display, setDisplay] = useState(\"\");\n  const [screen, setScreen] = useState(0);\n  const [dimensions, setDimensions] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const { phonesDispatch } = useContext(PhonesContext);\n\n  // Set up state to track the event, and set state's value as e.target.value\n  // set up effect to fire on componentDidUpdate()\n  // specify which input fields for hook to update -> setting the initial state as a variable\n\n  // Custom Hooks?\n  const onNameChange = e => setName(e.target.value);\n  const onReleaseChange = e => setRelease(e.target.value);\n  const onBrandChange = e => setBrand(e.target.value);\n  const onDisplayChange = e => setDisplay(e.target.value);\n  const onScreenChange = e => setScreen(e.target.value);\n  const onDimensionsChange = e => setDimensions(e.target.value);\n  const onPriceChange = e => {\n    // Regex to constrain currency input to two decimal places\n    const val = e.target.val;\n    if (!val || val.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\n      setPrice(val);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!name || !brand) {\n      setError(\"Please provide Name and Brand\");\n    } else {\n      setError(\"\");\n      phonesDispatch({});\n\n      props.onSubmit({\n        name,\n        release,\n        price,\n        brand,\n        display,\n        screen,\n        dimensions\n      });\n    }\n  };\n\n  const inputChange = useInputChange();\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          value={inputChange}\n          onChange={inputChange}\n          placeholder=\"name\"\n          autoFocus\n        />\n        <input\n          type=\"text\"\n          value={release}\n          onChange={onReleaseChange}\n          placeholder=\"release\"\n        />\n        <input\n          type=\"text\"\n          value={price}\n          onChange={onPriceChange}\n          placeholder=\"price\"\n        />\n        <input\n          type=\"text\"\n          value={brand}\n          onChange={onBrandChange}\n          placeholder=\"brand\"\n        />\n        <input\n          type=\"text\"\n          value={display}\n          onChange={onDisplayChange}\n          placeholder=\"display\"\n        />\n        <input\n          type=\"text\"\n          value={screen}\n          onChange={onScreenChange}\n          placeholder=\"screen\"\n        />\n        <input\n          type=\"text\"\n          value={dimensions}\n          onChange={onDimensionsChange}\n          placeholder=\"dimensions\"\n        />\n        <button>Add Expense</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PhoneForm;\n"]},"metadata":{},"sourceType":"module"}