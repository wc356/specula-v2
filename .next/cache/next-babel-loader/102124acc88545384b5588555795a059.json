{"ast":null,"code":"var _jsxFileName = \"/Users/WooChoi/Desktop/React.js/specula/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from \"next/app\";\nimport React from \"react\"; // import {createStore} from \"redux\";\n\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport configureStore from \"../src/store/configureStore\";\nimport { addPhone } from \"../src/actions/phones\";\nconst store = configureStore(); // const reducer = (state = {foo: ''}, action) => {\n//     switch (action.type) {\n//         case 'FOO':\n//             return {...state, foo: action.payload};\n//         default:\n//             return state\n//     }\n// };\n// const makeStore = (initialState, options) => {\n//   return createStore(reducer, initialState);\n// };\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // We can dispatch from here too\n    ctx.store.dispatch(addPhone({\n      name: \"iPhone 8\",\n      release: \"Sept 2018\",\n      price: 900\n    }));\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRedux(store)(MyApp);","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/pages/_app.js"],"names":["App","React","Provider","withRedux","configureStore","addPhone","store","MyApp","getInitialProps","Component","ctx","dispatch","name","release","price","pageProps","render","props"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,MAAMC,KAAK,GAAGF,cAAc,EAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMG,KAAN,SAAoBP,GAApB,CAAwB;AACtB,eAAaQ,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C;AACAA,IAAAA,GAAG,CAACJ,KAAJ,CAAUK,QAAV,CACEN,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAE,WAA7B;AAA0CC,MAAAA,KAAK,EAAE;AAAjD,KAAD,CADV;AAIA,UAAMC,SAAS,GAAGN,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIA,WAAO;AAAEK,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaM,MAAAA,SAAb;AAAwBT,MAAAA;AAAxB,QAAkC,KAAKW,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AArBqB;;AAwBxB,eAAeZ,SAAS,CAACG,KAAD,CAAT,CAAiBC,KAAjB,CAAf","sourcesContent":["import App from \"next/app\";\nimport React from \"react\";\n// import {createStore} from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport configureStore from \"../src/store/configureStore\";\nimport { addPhone } from \"../src/actions/phones\";\n\nconst store = configureStore();\n\n// const reducer = (state = {foo: ''}, action) => {\n//     switch (action.type) {\n//         case 'FOO':\n//             return {...state, foo: action.payload};\n//         default:\n//             return state\n//     }\n// };\n\n// const makeStore = (initialState, options) => {\n//   return createStore(reducer, initialState);\n// };\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    // We can dispatch from here too\n    ctx.store.dispatch(\n      addPhone({ name: \"iPhone 8\", release: \"Sept 2018\", price: 900 })\n    );\n\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(store)(MyApp);\n"]},"metadata":{},"sourceType":"module"}