{"ast":null,"code":"var _jsxFileName = \"/Users/WooChoi/Desktop/React.js/specula/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useReducer } from \"react\";\nimport { connect } from \"react-redux\";\nimport configureStore from \"../src/store/configureStore\";\nimport Layout from \"../src/components/Layout\";\nimport PhoneDashboardPage from \"../src/components/PhoneDashboardPage\";\nimport { addPhone } from \"../src/actions/phones\";\nimport { Provider } from \"react-redux\";\nimport getVisiblePhones from \"../src/selectors/phones\";\nimport PhonesContext from \"../src/context/phones-context\";\nimport filtersReducer from \"../src/reducers/filters\";\n\nconst Index = () => {\n  const {\n    0: phones,\n    1: phonesDispatch\n  } = useReducer(filtersReducer, []);\n  useEffect(() => {\n    phonesDispatch(addPhone({\n      name: \"iPhone 8\",\n      release: \"Sept 2018\",\n      price: 900\n    }));\n  }, []); // componentDidMount()\n\n  useEffect(() => {\n    // Load data from localStorage\n    const phones = JSON.parse(localStorage.getItem(\"phones\"));\n\n    if (phones) {\n      phonesDispatch({});\n    }\n  });\n  return __jsx(PhonesContext.Provider, {\n    value: {\n      phones,\n      phonesDispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(PhoneDashboardPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n}; // store.dispatch(\n//   addPhone({ name: \"iPhone 8\", release: \"Sept 2018\", price: 900 })\n// );\n// store.dispatch(\n//   addPhone({ name: \"iPhone 11\", release: \"Jan 2018\", price: 1600 })\n// );\n// const state = store.getState();\n// getVisiblePhones(state.phones, state.filters);\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/WooChoi/Desktop/React.js/specula/pages/index.js"],"names":["React","useEffect","useReducer","connect","configureStore","Layout","PhoneDashboardPage","addPhone","Provider","getVisiblePhones","PhonesContext","filtersReducer","Index","phones","phonesDispatch","name","release","price","JSON","parse","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAA2BZ,UAAU,CAACS,cAAD,EAAiB,EAAjB,CAA3C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc,CACZP,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAE,WAA7B;AAA0CC,MAAAA,KAAK,EAAE;AAAjD,KAAD,CADI,CAAd;AAGD,GAJQ,EAIN,EAJM,CAAT,CAHkB,CASlB;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMY,MAAM,GAAGK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAf;;AACA,QAAIR,MAAJ,EAAY;AACVC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GANQ,CAAT;AAQA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAzBD,C,CA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { connect } from \"react-redux\";\nimport configureStore from \"../src/store/configureStore\";\nimport Layout from \"../src/components/Layout\";\nimport PhoneDashboardPage from \"../src/components/PhoneDashboardPage\";\nimport { addPhone } from \"../src/actions/phones\";\nimport { Provider } from \"react-redux\";\nimport getVisiblePhones from \"../src/selectors/phones\";\nimport PhonesContext from \"../src/context/phones-context\";\nimport filtersReducer from \"../src/reducers/filters\";\n\nconst Index = () => {\n  const [phones, phonesDispatch] = useReducer(filtersReducer, []);\n\n  useEffect(() => {\n    phonesDispatch(\n      addPhone({ name: \"iPhone 8\", release: \"Sept 2018\", price: 900 })\n    );\n  }, []);\n\n  // componentDidMount()\n  useEffect(() => {\n    // Load data from localStorage\n    const phones = JSON.parse(localStorage.getItem(\"phones\"));\n    if (phones) {\n      phonesDispatch({});\n    }\n  });\n\n  return (\n    <PhonesContext.Provider value={{ phones, phonesDispatch }}>\n      <Layout>\n        <PhoneDashboardPage />\n      </Layout>\n    </PhonesContext.Provider>\n  );\n};\n\n// store.dispatch(\n//   addPhone({ name: \"iPhone 8\", release: \"Sept 2018\", price: 900 })\n// );\n// store.dispatch(\n//   addPhone({ name: \"iPhone 11\", release: \"Jan 2018\", price: 1600 })\n// );\n// const state = store.getState();\n// getVisiblePhones(state.phones, state.filters);\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}